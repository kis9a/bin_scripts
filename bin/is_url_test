#!/bin/bash

readonly cf="\\033[0m"
readonly red="\\033[0;31m"
readonly green="\\033[0;32m"

TRUE=0
FALSE=1

assert_equal() {
  if [[ "$1" != "$2" ]]; then
    return 1
  else
    return 0
  fi
}

test_err() {
  echo -e "${red}❌${cf} $1" 1>&2
}

test_succ() {
  echo -e "${green}✓ ${cf} $1" 1>&2
}

test_is_url() {
  local case
  local url
  local expected
  local actual

  case="$1" && expected="$2" && url="$3" && shift && shift
  if is_url "$url"; then
    actual="$TRUE"
  else
    actual="$FALSE"
  fi

  if assert_equal "$actual" "$expected"; then
    test_succ "test_is_url $case"
  else
    test_err "test_is_url $case"
  fi
}

run_test() {
  test_is_url "case https url" "$TRUE" "https://example.com"
  test_is_url "case http url" "$TRUE" "http://example.com"
  test_is_url "case ftp url" "$TRUE" "ftp://example.com"
  test_is_url "case data not url" "$FALSE" "data:text/html"
  test_is_url "case not url" "$FALSE" "adkjladf;k"
  test_is_url "case empty" "$FALSE" "adkjladf;k"
}

run_test "$@"

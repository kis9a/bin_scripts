#!/bin/bash

# bash version
# GNU bash, version 5.1.16(1)-release (x86_64-apple-darwin21.1.0)

readonly cf="\\033[0m"
readonly red="\\033[0;31m"
readonly green="\\033[0;32m"

assert_equal() {
  if [ "$1" != "$2" ]; then
    echo "expected: $1"
    echo "actual:   $2"
    return 1
  fi
}

test_err() {
  echo -e "${red}❌${cf} $1" 1>&2
}

test_suc() {
  echo -e "${green}✓ ${cf} $1" 1>&2
}

dirname_bash() {
  local tmp=${1:-.}

  [[ $tmp != *[!/]* ]] && {
    printf '/\n'
    return
  }

  tmp=${tmp%%"${tmp##*[!/]}"}

  [[ $tmp != */* ]] && {
    printf '.\n'
    return
  }

  tmp=${tmp%/*}
  tmp=${tmp%%"${tmp##*[!/]}"}
  printf '%s\n' "${tmp:-/}"
}

run_test() {
  test_dirname "a/bc/d" "a/bc"
  test_dirname "//////////a/bc/" "//////////a"
  test_dirname "/a/bc//" "/a"
  test_dirname "a/bc///d////あ" "a/bc///d"
}

# arg, expected
test_dirname() {
  if assert_equal "$(dirname_bash "$1")" "$2"; then
    test_suc "test_dirname: $1"
  else
    test_err "test_dirname: $1"
  fi
}

run_test "$@"

#!/bin/bash

readonly CF="\\033[0m"
readonly RED="\\033[0;31m"
readonly GREEN="\\033[0;32m"

err() {
  echo -e "${RED}[ERROR]: $1${CF}" 1>&2
}

succ() {
  echo -e "${GREEN}[SUCCESS]: $1${CF}"
}

info() {
  echo -e "[INFO]: $1 "
}

GIT_DIFF="$(git diff --cached --name-only --diff-filter=ACM)"
IS_DOCKER_EXISTS=true

is_exists_command() {
  which "$1" >/dev/null 2>&1
  return $?
}

is_empty_string() {
  if [[ $1 == "" ]]; then
    return 0
  else
    return 1
  fi
}

is_err() {
  if [[ $? -gt 0 ]]; then
    return 0
  else
    return 1
  fi
}

is_go_file() {
  local extension
  extension="${1##*.}"
  if [[ "$extension" == "go" ]]; then
    return 0
  else
    return 1
  fi
}

is_sh_file() {
  local extension
  extension="${1##*.}"
  if [[ -x "$1" ]] || [[ "$extension" == "sh" ]] || [[ "$extension" == "bash" ]]; then
    return 0
  else
    return 1
  fi
}

run_gofmt() {
  info "start gofmt"
  local go_files=()
  local msg
  local f
  while read -r f; do
    extension="${f##*.}"
    if is_go_file "$f"; then
      go_files+=("$f")
      if $IS_DOCKER_EXISTS; then
        msg="$(make go_fmt FILE="${f}")"
      else
        msg="$(gofmt -w "${f}")"
      fi
      if is_err; then
        err "$msg"
      else
        succ "gofmt $f"
      fi
      git add "$f"
    fi
  done \
    <<<"$GIT_DIFF"
  if [[ "${#go_files[*]}" -gt 0 ]]; then
    info "finish gofmt"
  else
    info "not exists go files, finish gofmt"
  fi
}

run_shfmt() {
  info "start shfmt"
  local sh_files=()
  local msg
  local f

  while read -r f; do
    if is_sh_file "$f"; then
      sh_files+=("$f")
      if $IS_DOCKER_EXISTS; then
        msg="$(make run_shfmt FILE="${f}")"
      else
        msg="$(shfmt "${f}")"
      fi
      if is_err; then
        err "$msg"
      else
        succ "shfmt $f"
      fi
      git add "$f"
    fi
  done \
    <<<"$GIT_DIFF"
  if [[ "${#sh_files[*]}" -gt 0 ]]; then
    info "finish sh fmt"
  else
    info "not exists sh files, finish sh fmt"
  fi
}

if is_exists_command "docker"; then
  if ! run_shfmt; then
    log_err "failed shfmt"
  fi

  if ! run_gofmt; then
    log_err "failed gofmt"
  fi
else
  IS_DOCKER_EXISTS=false

  if is_exists_command "gofmt"; then
    run_gofmt
  else
    info "skip gofmt, because gofmt command is not exists"
  fi

  if is_exists_command "shfmt"; then
    run_gofmt
  else
    info "skip gofmt, because gofmt command is not exists"
  fi
fi
